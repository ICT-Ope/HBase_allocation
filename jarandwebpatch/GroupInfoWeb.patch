diff -uNr hbase-0.90.2/hbase-webapps/master/changetablegroup.jsp hbase-0.90.2-local/hbase-webapps/master/changetablegroup.jsp
--- hbase-0.90.2/hbase-webapps/master/changetablegroup.jsp	1970-01-01 08:00:00.000000000 +0800
+++ hbase-0.90.2-local/hbase-webapps/master/changetablegroup.jsp	2011-06-24 17:03:28.000000000 +0800
@@ -0,0 +1,213 @@
+<%@ page language="java" import="java.util.*" import="java.io.*"
+	import="org.apache.hadoop.hbase.master.HMaster"
+	import="org.apache.hadoop.hbase.HTableDescriptor"
+	import="org.apache.hadoop.hbase.HRegionInfo"
+	import="org.apache.hadoop.hbase.HServerAddress"
+	import="org.apache.hadoop.hbase.HServerInfo"
+	import="org.apache.hadoop.hbase.util.Bytes"
+	import="org.apache.hadoop.hbase.group.ServerWithGroup"
+	import="org.apache.hadoop.hbase.ipc.ScheduleHBaseServer"
+	import="org.apache.hadoop.hbase.master.GroupAssignmentManager"
+	contentType="text/html; charset=GB18030" pageEncoding="GB18030"%>
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+<html>
+<head>
+<meta http-equiv="Content-Type" content="text/html; charset=GB18030">
+<title>Change Table Group Info</title>
+</head>
+<body>
+	<a id="logo" href="http://wiki.apache.org/lucene-hadoop/Hbase"><img src="/static/hbase_logo_med.gif" alt="HBase Logo" title="HBase Logo" /></a>
+	<h1 id="page_title">Change Table</h1>
+	<p id="links_menu"><a href="/master.jsp">Master</a>,<a href="/logs/">Local logs</a>, <a href="/stacks">Thread Dump</a>, <a href="/logLevel">Log Level</a>,<a href="showgroup.jsp">Group Information</a></p>
+
+	<hr id="head_rule" />
+	<%
+		class ChangeTableGP implements Runnable {
+			private String[] groups;
+			private String priporty;
+			private String tablename;
+
+			public ChangeTableGP(String[] groups, String priporty,
+					String tablename) {
+				this.groups = groups;
+				this.priporty = priporty;
+				this.tablename = tablename;
+			}
+
+			public void run() {
+				synchronized (GroupAssignmentManager.class) {
+					ServerWithGroup.setIserror(false);
+					try {
+						if (groups != null && groups.length > 0) {
+							System.out.println("in a thread , before change table group");
+							GroupAssignmentManager.setGroup(groups,
+									tablename);
+							System.out.println("in a thread , after change table group");
+						}
+						if (priporty != null && priporty.length()>0 ) {
+							System.out.println("in a thread , before change table priporty");
+							GroupAssignmentManager.setPriority(priporty,
+									tablename);
+							System.out.println("in a thread , after change table priporty");
+						}
+					} catch (Exception ex) {
+						ServerWithGroup.setIserror(true);
+						ServerWithGroup.setErrormsg("Change table property error ,please check log...");
+						ex.printStackTrace();
+					}finally{
+						synchronized (ServerWithGroup.class) {
+							ServerWithGroup.setIsprocess(false);
+							ServerWithGroup.setIschangetable(false);
+						}
+					}
+				}
+			}
+		}
+		
+		final String groupinfofilename = "groupinformation.conf";
+		HMaster master = (HMaster) getServletContext().getAttribute(
+				HMaster.MASTER);
+		Map<String, List<String>> groupmap = new HashMap<String, List<String>>();
+		String line = "";
+		boolean isprocess = ServerWithGroup.isIsprocess();
+		if (isprocess) {
+			out.println("<script type=\"text/javascript\">");
+			out.println("alert(\"System busy ,you can't change table group or pripority!!!\")");
+			out.println("history.back(-1)");
+			out.println("</script>");
+			return;
+		}
+		try {
+			line = ServerWithGroup.readGroupInfo(master, groupinfofilename);
+		} catch (IOException ex) {
+		}
+		groupmap = ServerWithGroup.initGroupMap(master, line);
+		if (groupmap.size() <= 0) {
+			out.println("No group Info ,error.......");
+			return;
+		}
+		List<HTableDescriptor> tablelist = ServerWithGroup
+				.listAllTables(master);
+		HTableDescriptor targettable1 = null;
+		HTableDescriptor targettable2 = null;
+		String newgroups = null;
+		String priority = null;
+		boolean needchangegrp = false;
+		boolean needchangepri = false;
+		for (HTableDescriptor table : tablelist) {
+			System.out.println("table name is " + table.getNameAsString());
+			if (request.getParameter(table.getNameAsString() + ".grp") != null) {
+				newgroups = request.getParameter(table.getNameAsString()
+						+ ".grp");
+				if (newgroups.length() <= 0) continue;
+				System.out.println("newgroups is " + newgroups);
+				targettable1 = table;
+				needchangegrp = true;
+				break;
+			}
+		}
+		for (HTableDescriptor table : tablelist) {
+			if (request.getParameter(table.getNameAsString() + ".pri") != null) {
+				priority = request.getParameter(table.getNameAsString()
+						+ ".pri");
+				if (priority.length() <= 0) continue;
+				System.out.println("priority is " + priority);
+				targettable2 = table;
+				needchangepri = true;
+				break;
+			}
+		}
+		if (targettable1 == null && targettable2 == null) {
+			out.println("<script type=\"text/javascript\">");
+			out.println("alert(\"Table don't exist !!!\")");
+			out.println("history.back(-1)");
+			out.println("</script>");
+		}
+		if (needchangegrp && needchangepri) {
+			if (!targettable1.equals(targettable2)) {
+				out.println("<script type=\"text/javascript\">");
+				out.println("alert(\"Error Table  confuse to change  !!!\")");
+				out.println("history.back(-1)");
+				out.println("</script>");
+				return;
+			}
+		}
+		if (!needchangegrp && !needchangepri) {
+			out.println("<script type=\"text/javascript\">");
+			out.println("alert(\"No table to change  !!!\")");
+			out.println("history.back(-1)");
+			out.println("</script>");
+			return;
+		}
+		String[] groups = null;
+		String tablename = null;
+		if (needchangegrp) {
+			System.out.println("need change group!!");
+			tablename = targettable1.getNameAsString();
+			if (tablename.equals("-ROOT-") || tablename.equals(".META."))
+				return;
+			System.out.println("newgroup " + newgroups);
+			groups = newgroups.split(GroupAssignmentManager.GROUP_SPLITER);
+			for (String gp : groups) {
+				System.out.println("group " + gp);
+				try {
+					int i = Integer.valueOf(gp);
+				} catch (Exception ex) {
+					out.println("<script type=\"text/javascript\">");
+					out.println("alert(\"Error , Wrong group format, group must be int!!!\")");
+					out.println("history.back(-1)");
+					out.println("</script>");
+					return;
+				}
+				if (!groupmap.keySet().contains(gp)) {
+					out.println("<script type=\"text/javascript\">");
+					out.println("alert(\"Error ,This group don't exist!!!\")");
+					out.println("history.back(-1)");
+					out.println("</script>");
+					return;
+				}
+				List<String> serverlist = groupmap.get(gp);
+				if (serverlist.size() <= 0) {
+					out.println("<script type=\"text/javascript\">");
+					out.println("alert(\"Error ,This group don't contain regionserver!!!\")");
+					out.println("history.back(-1)");
+					out.println("</script>");
+					return;
+				}
+			}
+		}
+		if (needchangepri) {
+			System.out.println("need change priority!!, and priority is "+priority);
+			tablename = targettable2.getNameAsString();
+			try {
+				int i = Integer.valueOf(priority);
+				if (i<1 || i> 10){
+					out.println("<script type=\"text/javascript\">");
+					out.println("alert(\"Error , priority must between 1 and 10 !!!\")");
+					out.println("history.back(-1)");
+					out.println("</script>");
+					return;
+				}
+			} catch (Exception ex) {
+				out.println("<script type=\"text/javascript\">");
+				out.println("alert(\"Error , Wrong priority format, priority must be int!!!\")");
+				out.println("history.back(-1)");
+				out.println("</script>");
+				return;
+			}
+		}
+		synchronized (ServerWithGroup.class) {
+			ServerWithGroup.setIsprocess(true);
+			ServerWithGroup.setIschangetable(true);
+		}
+		System.out.println("start change group or priority....,group is "+groups+" and pripority is "+priority+" and table is "+tablename);
+		Thread chtable = new Thread(new ChangeTableGP(groups, priority,
+				tablename));
+		chtable.start();
+		out.println("<script type=\"text/javascript\">");
+		out.println("alert(\"Process Change table  ,may cost lots of  time ,please wait...\")");
+		out.println("history.back(-1)");
+		out.println("</script>");
+	%>
+</body>
+</html>
\ No newline at end of file
diff -uNr hbase-0.90.2/hbase-webapps/master/dogroupbalacne.jsp hbase-0.90.2-local/hbase-webapps/master/dogroupbalacne.jsp
--- hbase-0.90.2/hbase-webapps/master/dogroupbalacne.jsp	1970-01-01 08:00:00.000000000 +0800
+++ hbase-0.90.2-local/hbase-webapps/master/dogroupbalacne.jsp	2011-06-24 17:03:28.000000000 +0800
@@ -0,0 +1,69 @@
+<%@ page language="java" 
+	import="org.apache.hadoop.hbase.master.GroupAssignmentManager"
+	import="org.apache.hadoop.hbase.group.ServerWithGroup"
+	contentType="text/html; charset=GB18030"
+    pageEncoding="GB18030"%>
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+<html>
+<head>
+<meta http-equiv="Content-Type" content="text/html; charset=GB18030">
+<title>Balance group</title>
+</head>
+<body>
+<%
+	class Balancegroup implements Runnable{
+		private String group;
+		public Balancegroup(String group){
+			this.group = group;
+		}
+		public void run(){
+			try {
+				ServerWithGroup.setIserror(false);
+				synchronized(GroupAssignmentManager.class){
+					GroupAssignmentManager.balanceGroup(group);
+				}
+			}catch(Exception ex){
+				ServerWithGroup.setIserror(true);
+				ServerWithGroup.setErrormsg("Group Balance error ,please check log...");
+				ex.printStackTrace();
+			}finally{
+				synchronized (ServerWithGroup.class) {
+					ServerWithGroup.setIsprocess(false);
+					ServerWithGroup.setIsbalance(false);
+				}
+			}
+		}
+	}
+%>
+<%
+	boolean isprocess = ServerWithGroup.isIsprocess();
+	if (!isprocess) {
+		if (request.getParameter("groupname") != null) {
+			String group = request.getParameter("groupname");
+			
+			//start a thread
+			synchronized (ServerWithGroup.class) {
+				ServerWithGroup.setIsprocess(true);
+				ServerWithGroup.setIsbalance(true);
+			}
+			Thread balancethread = new Thread(new Balancegroup(group));
+			balancethread.start();
+			out.println("<script type=\"text/javascript\">");
+			out.println("alert(\"Balance group "+ group +" ............\")");
+			out.println("window.location.href='groupinfo.jsp?groupname="+group+"'");
+			out.println("</script>");
+		}else{
+			out.println("<script type=\"text/javascript\">");
+			out.println("alert(\"Error, Set groupname first ............\")");
+			out.println("history.back(-1)");
+			out.println("</script>");
+		}
+	}else{
+		out.println("<script type=\"text/javascript\">");
+		out.println("alert(\"Wait, System busy............\")");
+		out.println("history.back(-1)");
+		out.println("</script>");
+	}
+%>
+</body>
+</html>
\ No newline at end of file
diff -uNr hbase-0.90.2/hbase-webapps/master/dotablebalance.jsp hbase-0.90.2-local/hbase-webapps/master/dotablebalance.jsp
--- hbase-0.90.2/hbase-webapps/master/dotablebalance.jsp	1970-01-01 08:00:00.000000000 +0800
+++ hbase-0.90.2-local/hbase-webapps/master/dotablebalance.jsp	2011-06-24 17:03:28.000000000 +0800
@@ -0,0 +1,138 @@
+<%@ page language="java" import="java.util.*"
+	import="org.apache.hadoop.hbase.master.GroupAssignmentManager"
+	import="org.apache.hadoop.hbase.group.ServerWithGroup"
+	import="org.apache.hadoop.hbase.master.HMaster"
+	import="org.apache.hadoop.hbase.HRegionInfo"
+	import="org.apache.hadoop.hbase.HServerInfo"
+	import="org.apache.hadoop.hbase.util.Bytes"
+	import="org.apache.hadoop.hbase.UnknownRegionException"
+	import="org.apache.hadoop.hbase.MasterNotRunningException"
+	import="org.apache.hadoop.hbase.ZooKeeperConnectionException"
+	import="org.apache.hadoop.hbase.HTableDescriptor"
+	contentType="text/html; charset=GB18030" pageEncoding="GB18030"%>
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+<html>
+<head>
+<meta http-equiv="Content-Type" content="text/html; charset=GB18030">
+<link rel="stylesheet" type="text/css" href="/static/hbase.css" />
+<title>Table balance</title>
+</head>
+<body>
+	<a id="logo" href="http://wiki.apache.org/lucene-hadoop/Hbase"><img src="/static/hbase_logo_med.gif" alt="HBase Logo" title="HBase Logo" /></a>
+	<h1 id="page_title">Table Balance</h1>
+	<p id="links_menu"><a href="/master.jsp">Master</a>,<a href="/logs/">Local logs</a>, <a href="/stacks">Thread Dump</a>, <a href="/logLevel">Log Level</a>,<a href="showgroup.jsp">Group Information</a></p>
+	
+	<hr id="head_rule" />
+	<%
+		class Balancetable implements Runnable {
+			private String table;
+
+			public Balancetable(String table) {
+				this.table = table;
+			}
+
+			public void run() {
+				try {
+					ServerWithGroup.setIserror(false);
+					synchronized (GroupAssignmentManager.class) {
+						GroupAssignmentManager.balanceTable(table);
+					}
+				} catch (Exception ex) {
+					ServerWithGroup.setIserror(true);
+					ServerWithGroup.setErrormsg("Table " + table
+							+ " Balance error ,please check log...");
+					ex.printStackTrace();
+				} finally {
+					synchronized (ServerWithGroup.class) {
+						ServerWithGroup.setIsprocess(false);
+						ServerWithGroup.setIsbalance(false);
+					}
+				}
+			}
+		}
+	%>
+	<%
+	
+		String table = "";
+		if (request.getParameter("tablename") != null) {
+			table = request.getParameter("tablename");
+		} else {
+			out.println("<script type=\"text/javascript\">");
+			out.println("alert(\"Error, Set tablename first ............\")");
+			out.println("window.location.href='showgroup.jsp'");
+			out.println("</script>");
+		}
+		HMaster master = (HMaster) getServletContext().getAttribute(
+				HMaster.MASTER);
+		List<HServerInfo> availalbeserver = GroupAssignmentManager
+				.getAvailableServer(table);
+		Map<String ,Integer> balancestate = new HashMap<String,Integer>();
+		int totalregion = 0;
+		int totalserver = 0;
+		boolean finishedbalance = true;
+		for(HServerInfo info : availalbeserver)	{
+			String servername = info.getHostname()+","+info.getServerAddress().getPort();
+			int size=ServerWithGroup.getRegionOfTableOnServer(master,table,info);
+			balancestate.put(servername,size);
+			totalregion+= size;
+			totalserver+=1;
+		}
+		if(totalregion == 0 || totalserver== 0 ){
+			out.println("<br>No region available in this table<br>");
+		}else{
+			int min = totalregion/totalserver;
+			int max = min+GroupAssignmentManager.div;
+			for (Map.Entry<String,Integer> entry : balancestate.entrySet()){
+				int size = entry.getValue();
+				if (size < min || size > max){
+					finishedbalance = false;
+					break;
+				}
+			}
+		}
+		boolean isprocess = ServerWithGroup.isIsprocess();
+		if (!isprocess) {
+			//start a thread
+			if (finishedbalance == false){
+				synchronized (ServerWithGroup.class) {
+					ServerWithGroup.setIsprocess(true);
+					ServerWithGroup.setIsbalance(true);
+				}
+				Thread balancethread = new Thread(new Balancetable(table));
+				balancethread.start();
+			}else{
+				out.println("<script type=\"text/javascript\">");
+				out.println("alert(\"This table is balanced already.\")");
+				out.println("</script>");
+			}
+		}
+		if (ServerWithGroup.isIsbalance()){
+			if (finishedbalance== false){
+				out.println("<br>Warning, System is busy<br>");
+				out.println("<form name='flushform' action='#' method=post>");
+				out.println("<input type=submit name=submit value=Refresh style=\"width:200px;height:100px\" >");
+				out.println("</form><br>");
+			}
+		}
+		boolean haserror = ServerWithGroup.isIserror();
+		if (haserror){
+			out.println("<br>"+ServerWithGroup.getErrormsg()+"<br>");
+		}
+		out.println("<h4>Table name :"+table+"</h4>");
+		if (finishedbalance){
+			out.println("<br>Table is balanced already ,<a href=\"showgroup.jsp\">Back to Home</a> <br><br>");
+		}
+		out.println("<TABLE BORDER=1>");
+		out.println("<TR><TD>Servername</TD>");
+		out.println("<TD>region num</TD></TR>");
+
+		for(HServerInfo info : availalbeserver)	{
+			String servername = info.getHostname()+","+info.getServerAddress().getPort();
+			int size=ServerWithGroup.getRegionOfTableOnServer(master,table,info);
+			out.println("<TR><TD>"+servername+"</TD>");
+			out.println("<TD>("+size+")</TD></TR>");
+		}
+		out.println("</TABLE>");
+	%>
+</body>
+</html>
\ No newline at end of file
diff -uNr hbase-0.90.2/hbase-webapps/master/groupinfo.jsp hbase-0.90.2-local/hbase-webapps/master/groupinfo.jsp
--- hbase-0.90.2/hbase-webapps/master/groupinfo.jsp	1970-01-01 08:00:00.000000000 +0800
+++ hbase-0.90.2-local/hbase-webapps/master/groupinfo.jsp	2011-06-24 17:03:28.000000000 +0800
@@ -0,0 +1,158 @@
+<%@ page language="java" 
+	import="java.util.*"
+	import="java.io.*"
+	import="org.apache.hadoop.hbase.master.HMaster"
+	import="org.apache.hadoop.hbase.HTableDescriptor"
+	import="org.apache.hadoop.hbase.HRegionInfo"
+	import="org.apache.hadoop.hbase.HServerAddress"
+	import="org.apache.hadoop.hbase.HServerInfo"
+	import="org.apache.hadoop.hbase.util.Bytes"
+	import="org.apache.hadoop.hbase.group.ServerWithGroup"
+	import="org.apache.hadoop.hbase.ipc.ScheduleHBaseServer"
+	import="org.apache.hadoop.hbase.master.GroupAssignmentManager"
+	contentType="text/html; charset=GB18030"
+    pageEncoding="GB18030"%>
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+<html>
+<head>
+<meta http-equiv="Content-Type" content="text/html; charset=GB18030">
+<title>Group Information Detail</title>
+<link rel="stylesheet" type="text/css" href="/static/hbase.css" />
+</head>
+<body>
+	<a id="logo" href="http://wiki.apache.org/lucene-hadoop/Hbase"><img src="/static/hbase_logo_med.gif" alt="HBase Logo" title="HBase Logo" /></a>
+	<h1 id="page_title">Detail Group Info</h1>
+	<p id="links_menu"><a href="/master.jsp">Master</a>,<a href="/logs/">Local logs</a>, <a href="/stacks">Thread Dump</a>, <a href="/logLevel">Log Level</a>,<a href="showgroup.jsp">Group Information</a></p>
+	<hr id="head_rule" />
+<% 
+	final String defaultgroup = "0";
+	final String groupinfofilename="groupinformation.conf";
+	boolean isprocess = ServerWithGroup.isIsprocess();
+	if (isprocess){
+		if (ServerWithGroup.isIschangetable()){
+			out.println("<br>System is change table...........");
+			out.println("<form name='flushform' action='#' method=post>");
+			out.println("<input type=submit name=submit value=Refresh style=\"width:200px;height:80px\" >");
+			out.println("</form>");
+		}
+	}
+	if (request.getParameter("groupname") != null) {
+		String group = request.getParameter("groupname");
+		out.println("<br><h4>Group Detail Information</h4>");
+		HMaster master = (HMaster) getServletContext().getAttribute(
+				HMaster.MASTER);
+		Map<String, List<String>> groupmap = new HashMap<String,List<String>>();
+		String line = "";
+		try {
+			line = ServerWithGroup.readGroupInfo(master,groupinfofilename);
+		}catch (IOException ex){
+		}
+		groupmap=ServerWithGroup.initGroupMap(master,line);
+		if (groupmap.size()<=0 ){
+				out.println("No group Info ,error.......");
+				return;
+		}
+			
+		Collection<HServerInfo> servercollect = master.getClusterStatus().getServerInfo();
+		
+		List<String> serverlist = groupmap.get(group);
+		out.println("<h4>  group: " + group + " </h4>");
+		out.println("Need balance ? <a href=\"dogroupbalacne.jsp?groupname="+group+"\">balance</a>");
+		out.println("<br>Server num :" + serverlist.size() + "<br><br>");
+		String spliter = GroupAssignmentManager.GROUP_SPLITER;
+		out.println("<TABLE BORDER=1>");
+		out.println("<TR><TD>Server name</TD>");
+		out.println("<TD>Server detail</TD>");
+		out.println("<TD>Table num</TD>");
+		out.println("<TD>Region num</TD></TR>");
+		List<HTableDescriptor> tablelist = new ArrayList<HTableDescriptor>();
+		List<HRegionInfo> regionlist = new ArrayList<HRegionInfo>();
+		for (String server : serverlist){
+			out.println("<TR><TD>Server"+server+"</TD>");
+			List<HTableDescriptor> tables = ServerWithGroup.listTableOnRegionServer(master,server);
+			for (HTableDescriptor table :tables ){
+				if (!tablelist.contains(table)){
+					tablelist.add(table);
+				}
+			}
+			List<HRegionInfo> regions = ServerWithGroup.listRegionOnRegionServer(master,server);
+			for (HRegionInfo region :regions ){
+				if (!regionlist.contains(region)){
+					regionlist.add(region);
+				}
+			}
+			HServerInfo  regionserver = null;
+			for (HServerInfo info:servercollect){
+				String name= info.getHostname()+","+info.getServerAddress().getPort();
+				if (name.equals(server)){
+					regionserver = info;
+				}
+			}
+			out.println("<TD><a href=\"http://"+regionserver.getHostname()+":"+regionserver.getInfoPort()+"/regionserver.jsp\">"+server+"</a></TD>");
+			out.println("<TD>table num:" + tables.size() + "</TD>");
+			out.println("<TD>region num:" + regions.size() + "</TD></TR>");
+		}
+		out.println("</TABLE>");
+		out.println("<br><br>Table detail info in this group</br>");
+		out.println("<br>Total  Table num:" + tablelist.size());
+		out.println("<br>Total Region num:" + regionlist.size());
+		out.println("<br>If you want change table group ,new groups must be int ,and must be split with \"" + spliter+ "\"<br>");
+		out.println("<br>The priority of table you want to change must between 1 and 10 ,and small num means high priority.<br>");
+		if (regionlist.size() <= 0 ) return;
+		out.println("<TABLE BORDER=1>");
+		out.println("<TR><TD>Table name</TD>");
+		out.println("<TD>Region num</TD>");
+		out.println("<TD>Table Priority</TD>");
+		out.println("<TD>Belong Groups</TD>");
+		out.println("<TD>Change Groups</TD>");
+		out.println("<TD>Change Priority</TD>");
+		out.println("<TD>Submit</TD>");
+		out.println("<TD>Table Balance</TD></TR>");
+		out.println("<FORM name=\"tableform\" action=\"changetablegroup.jsp\" method=post >");
+		for (HTableDescriptor table :tablelist ){
+			String tableaddress = "http://"+master.getMasterAddress().getHostname()+":"+master.getInfoServer().getPort()+"/table.jsp?name="+table.getNameAsString();
+			out.println("<TR><TD><a href="+tableaddress+">"+table.getNameAsString()+"</a></TD>");
+			int regionnum = 0;
+			for (HRegionInfo region :regionlist ){
+				HTableDescriptor regiontable = region.getTableDesc();
+				if (regiontable.equals(table)){
+					regionnum ++;
+				}
+			}
+			out.println("<TD>"+regionnum+"</TD>");
+			byte[] pvalue = table.getValue(Bytes.toBytes("priority"));
+			if (pvalue== null || pvalue.length <= 0  ){
+				String tablename = table.getNameAsString();
+				if (tablename.equals("-ROOT-") || tablename.equals(".META.")){
+					out.println("<TD>"+ScheduleHBaseServer.highestPri+"</TD>");
+				}else{
+					out.println("<TD>"+ScheduleHBaseServer.defaultPri+"</TD>");
+				}
+			}else{
+				out.println("<TD>"+Bytes.toString(pvalue)+"</TD>");
+			}
+			byte[] gvalue = table.getValue(GroupAssignmentManager.GROUP_KEY);
+			
+			if (gvalue != null){
+				out.println("<TD>"+Bytes.toString(gvalue)+"</TD>");
+			}else{
+				out.println("<TD>null</TD>");
+			}
+			String tablename = table.getNameAsString();
+			if (!tablename.equals("-ROOT-") && !tablename.equals(".META.")){
+				out.println("<TD><input type=text name=" + table.getNameAsString()
+					+ ".grp size=5 style=\"width:80%\"></TD>");
+				out.println("<TD><input type=text name=" + table.getNameAsString()
+						+ ".pri size=5 style=\"width:80%\"></TD>");
+				out.println("<TD><input type=submit name='changetable' value='ChangeTable'></TD>");
+				out.println("<TD><a href=dotablebalance.jsp?tablename="+table.getNameAsString()+">balacne</a></TD>");
+			}
+			out.println("</TR>");
+		}
+		out.println("</FORM>"); 
+		out.println("</TABLE>");
+	}
+	
+%>
+</body>
+</html>
\ No newline at end of file
diff -uNr hbase-0.90.2/hbase-webapps/master/moveremoteconf.sh hbase-0.90.2-local/hbase-webapps/master/moveremoteconf.sh
--- hbase-0.90.2/hbase-webapps/master/moveremoteconf.sh	1970-01-01 08:00:00.000000000 +0800
+++ hbase-0.90.2-local/hbase-webapps/master/moveremoteconf.sh	2011-06-24 17:03:35.000000000 +0800
@@ -0,0 +1,32 @@
+#!/bin/bash
+#Filename: moveremoteconf.sh
+
+server=$1
+confdir=$2
+hbasedir=$3
+command=$4
+filename=`basename $confdir`
+libdir="$hbasedir/lib"
+dirname=`dirname $confdir`
+
+if [ "$command" = "get" ]
+then
+	#clean hbase-conf hbase lib
+	rm -fr $filename
+	rm -fr lib
+	rm -f  hbase-*.jar
+	#get hbase-conf
+	scp -r $server:$confdir $filename
+	scp -r $server:$libdir lib
+	scp -r $server:$hbasedir/hbase-*.jar .
+elif [ "$command" = "put" ]
+then
+	#put hbase-conf,hbase lib 
+	ssh $server "cd $dirname; mv $filename $filename.back; cd $hbasedir; mv lib lib.back; rm -f hbase-*.jar"
+	scp -r $filename $server:${dirname}/
+	scp -r lib $server:${hbasedir}/
+	scp -r hbase-*.jar $server:${hbasedir}/
+	rm -fr $filename
+        rm -fr lib
+        rm -f  hbase-*.jar
+fi
diff -uNr hbase-0.90.2/hbase-webapps/master/processgroup.jsp hbase-0.90.2-local/hbase-webapps/master/processgroup.jsp
--- hbase-0.90.2/hbase-webapps/master/processgroup.jsp	1970-01-01 08:00:00.000000000 +0800
+++ hbase-0.90.2-local/hbase-webapps/master/processgroup.jsp	2011-06-24 17:03:28.000000000 +0800
@@ -0,0 +1,261 @@
+<%@ page language="java" import="java.util.*" import="java.io.*"
+	import="org.apache.hadoop.hbase.master.HMaster"
+	import="org.apache.hadoop.hbase.HRegionInfo"
+	import="org.apache.hadoop.hbase.HServerInfo"
+	import="org.apache.hadoop.hbase.util.Bytes"
+	import="org.apache.hadoop.hbase.UnknownRegionException"
+	import="org.apache.hadoop.hbase.MasterNotRunningException"
+	import="org.apache.hadoop.hbase.ZooKeeperConnectionException"
+	import="org.apache.hadoop.hbase.HTableDescriptor"
+	import="org.apache.hadoop.hbase.master.GroupAssignmentManager"
+	import="org.apache.hadoop.hbase.group.ServerWithGroup"
+	import="org.apache.hadoop.hbase.group.MoveGroupPlan"
+	import="org.apache.hadoop.hbase.group.MoveConfImpl"
+	import="org.apache.hadoop.hbase.group.ProcessMove"
+	contentType="text/html; charset=GB18030" pageEncoding="GB18030"%>
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+<html>
+<head>
+<meta http-equiv="Content-Type" content="text/html; charset=GB18030">
+<title>Process Group</title>
+</head>
+<body>
+	<%
+		final String DEFAULT_GROUP = "0";
+			final String groupinfofilename = "groupinformation.conf";
+			HMaster master = (HMaster) getServletContext().getAttribute(
+			HMaster.MASTER);
+			Map<String, List<String>> groupmap = new HashMap<String, List<String>>();
+			Map<String, Boolean> grouppropertymap = new HashMap<String, Boolean>();
+			boolean isprocess = ServerWithGroup.isIsprocess();
+			//out.println("Is moving regionservers ??? "+isprocess);
+			if (!isprocess) {
+		//get groupmap from hdfs
+		String line = "";
+		try {
+			line = ServerWithGroup.readGroupInfo(master,
+					groupinfofilename);
+		} catch (IOException ex) {
+		}
+		groupmap = ServerWithGroup.initGroupMap(master, line);
+		grouppropertymap=ServerWithGroup.initGroupPropertyMap(master,line);
+		if(!grouppropertymap.keySet().contains(DEFAULT_GROUP)){
+			grouppropertymap.put(DEFAULT_GROUP,false);
+		}
+		if (groupmap.size() <= 0) {
+			out.println("No group Info ,error.......");
+			return;
+		}
+		 boolean modifygroup = false;
+		//add group
+		if (request.getParameter("addnewgroup") != null) {
+			String newgroup = request.getParameter("addnewgroup");
+			Set<String> grouplist = groupmap.keySet();
+			if (!grouplist.contains(newgroup)) {
+				if (newgroup.length() > 0) {
+					try {
+						int id = Integer.valueOf(newgroup);
+					} catch (NumberFormatException ex) {
+						out.println("<script type=\"text/javascript\">");
+						out.println("alert(\"Error , Groupname must be int!\")");
+						out.println("window.location.href='showgroup.jsp'");
+						out.println("</script>");
+						return;
+					}
+					modifygroup = true;
+					groupmap.put(newgroup, new ArrayList<String>());
+					if (request.getParameter("setgroupproperty")!=null){
+						grouppropertymap.put(newgroup,true);
+					}else{
+						grouppropertymap.put(newgroup,false);
+					}
+					out.println("<br>Add group " + newgroup
+							+ " information successfully !!");
+				}
+			}else{
+				out.println("<script type=\"text/javascript\">");
+				out.println("alert(\"Error , Groupname must be unique , use another groupname!\")");
+				out.println("window.location.href='showgroup.jsp'");
+				out.println("</script>");
+				return;
+			}
+		}
+		//del group
+		Set<String> grouplist = new HashSet<String>();
+		for (String group : groupmap.keySet()) {
+			grouplist.add(group);
+		}
+		for (String group : grouplist) {
+			if (request.getParameter(group + ".del") != null) {
+				List<String> rgplist = groupmap.get(group);
+				if (rgplist != null && rgplist.size() > 0) {
+					out.println("<script type=\"text/javascript\">");
+					out.println("alert(\"Error , This group is not null ,move regionservers to other group first!!\")");
+					out.println("window.location.href='showgroup.jsp'");
+					out.println("</script>");
+					return;
+				} else {
+					modifygroup = true;
+					groupmap.remove(group);
+					out.println("<br>Remove  group " + group
+							+ " information successfully !!");
+				}
+			}
+		}
+		if(modifygroup){
+			//write back
+			ServerWithGroup.writeGroupInfo(master, groupinfofilename,
+				groupmap,grouppropertymap);
+			// tell someone else
+			Thread initthread = new Thread(new Runnable(){
+				public void run(){
+					GroupAssignmentManager.initValue(false);
+				}
+			});
+			initthread.start();
+			out.println("<script type=\"text/javascript\">");
+			out.println("window.location.href='showgroup.jsp'");
+			out.println("</script>");
+			return;
+		}
+		// move regionserver group
+		Set<MoveGroupPlan> movegroupPlanset = new HashSet<MoveGroupPlan>();
+		for (Map.Entry<String, List<String>> gp : groupmap.entrySet()) {
+			String originalgroup = gp.getKey();
+			for (String servername : gp.getValue()) {
+				if (request.getParameter(servername + ".select") != null) {
+					String newgroup = request.getParameter(servername
+							+ ".select");
+					if (!newgroup.equals("null")) {
+						if (originalgroup.equals(DEFAULT_GROUP)) {
+							if (groupmap.get(originalgroup).size() <= 1) {
+								out.println("<script type=\"text/javascript\">");
+								out.println("alert(\"Error , Default group 0 must have at least one regionserver, can't change !!\")");
+								out.println("window.location.href='showgroup.jsp'");
+								out.println("</script>");
+								return;
+							}
+						}
+						MoveGroupPlan newplan = new MoveGroupPlan(
+								servername, originalgroup, newgroup);
+						movegroupPlanset.add(newplan);
+					}
+				}
+			}
+		}
+		
+		//do move
+		if (movegroupPlanset.size() <= 0) {
+			return;
+		} else {
+			if (movegroupPlanset.size() >= 5) {
+				out.println("<script type=\"text/javascript\">");
+				out.println("alert(\"Error , At most change 5 regionserver once,please check carefully!!!\")");
+				out.println("window.location.href='showgroup.jsp'");
+				out.println("</script>");
+				return;
+			}
+			boolean haveunmoveableregion = false;
+			for (MoveGroupPlan plan : movegroupPlanset){
+				String servername = plan.getServername();
+				List<HRegionInfo> regionlist = new ArrayList<HRegionInfo>();
+				try {
+					regionlist = ServerWithGroup.listRegionOnRegionServer(master,servername);
+					for (HRegionInfo info : regionlist ){
+						if (info.isMetaRegion() || info.isRootRegion()){
+							haveunmoveableregion = true;
+							break;
+						}
+					}
+				} catch (MasterNotRunningException e1) {
+					e1.printStackTrace();
+				} catch (ZooKeeperConnectionException e1) {
+					e1.printStackTrace();
+				}
+				if (haveunmoveableregion)
+					break;
+			}
+			if (haveunmoveableregion){
+				out.println("<script type=\"text/javascript\">");
+				out.println("alert(\"Failure  warning , because theas server has -ROOT- or .META. region, they can not be moved.!!!\")");
+				out.println("window.location.href='showgroup.jsp'");
+				out.println("</script>");
+				return;
+			}
+			List<String> willmoveservers = new ArrayList<String>();			
+			for (MoveGroupPlan plan : movegroupPlanset){
+				String servername = plan.getServername();
+				willmoveservers.add(servername);
+			}
+			boolean noserverfotable = false;
+			HTableDescriptor lonetable = null;
+			for (MoveGroupPlan plan : movegroupPlanset){
+				String servername = plan.getServername();
+				String originalgp = plan.getOriginalgroup();
+				String targetgp = plan.getTargetgroup();
+				if (originalgp.equals(targetgp)){
+					willmoveservers.remove(servername);
+					continue;
+				}	
+				List<HRegionInfo> regionlist = new ArrayList<HRegionInfo>();
+				try {
+					regionlist = ServerWithGroup.listRegionOnRegionServer(master,servername);
+				} catch (MasterNotRunningException e1) {
+					e1.printStackTrace();
+				} catch (ZooKeeperConnectionException e1) {
+					e1.printStackTrace();
+				}
+				if (regionlist== null) continue;
+				//find absolate table 
+				for (HRegionInfo hri : regionlist) {
+					String tablename = hri.getTableDesc().getNameAsString();
+					List<HServerInfo> availalbeserver = GroupAssignmentManager.getAvailableServer(tablename);
+					List<String> availservernames = new ArrayList<String>();
+					for (HServerInfo hsr : availalbeserver){
+							String name = hsr.getHostname()+","+hsr.getServerAddress().getPort();
+							//cancel will delete server
+							if (!willmoveservers.contains(name)){
+								availservernames.add(name);
+							}
+						}
+					if (availservernames.size() <= 0){
+						noserverfotable = true;	
+						lonetable = hri.getTableDesc();
+						break;
+					}
+				}
+				if (noserverfotable ){
+						break;
+				}
+			}
+			if (noserverfotable ){
+				out.println("<script type=\"text/javascript\">");
+				out.println("alert(\"Failure  warning , because the table "+lonetable.getNameAsString()+" has no available regionserver, you can change its group property first ,and then change this regionserver's group!!!\")");
+				out.println("window.location.href='showgroup.jsp'");
+				out.println("</script>");
+				return;
+			}		
+			//start a thread
+			synchronized (ServerWithGroup.class) {
+				ServerWithGroup.setIsprocess(true);
+				ServerWithGroup.setIsmoveregion(true);
+			}
+			String currentdir = request.getRealPath("/");
+			ProcessMove pgromove = new ProcessMove(
+					movegroupPlanset, groupmap,grouppropertymap, master,
+					currentdir);
+			Thread movethread = new Thread(pgromove);
+			movethread.start();
+			out.println("<script type=\"text/javascript\">");
+			out.println("alert(\"System is processing move group,please wait...\")");
+			out.println("window.location.href='showgroup.jsp'");
+			out.println("</script>");
+		}
+			}
+			out.println("<script type=\"text/javascript\">");
+			out.println("alert(\"System busy ,wait move group process over !!!\")");
+			out.println("history.back(-1)");
+			out.println("</script>");
+	%>
+</body>
+</html>
\ No newline at end of file
diff -uNr hbase-0.90.2/hbase-webapps/master/restartserver.sh hbase-0.90.2-local/hbase-webapps/master/restartserver.sh
--- hbase-0.90.2/hbase-webapps/master/restartserver.sh	1970-01-01 08:00:00.000000000 +0800
+++ hbase-0.90.2-local/hbase-webapps/master/restartserver.sh	2011-06-24 17:03:35.000000000 +0800
@@ -0,0 +1,16 @@
+#!/bin/bash
+#Filename: restartserver.sh
+
+server=$1
+hbasedir=$2
+command=$3
+
+if [ "$command" = "start" ]
+then	
+	START="$hbasedir/bin/hbase-daemon.sh start regionserver"
+	ssh $server $START
+elif [ "$command" = "stop" ]
+then
+	STOP="$hbasedir/bin/hbase-daemon.sh stop regionserver"
+	ssh $server $STOP
+fi
diff -uNr hbase-0.90.2/hbase-webapps/master/showgroup.jsp hbase-0.90.2-local/hbase-webapps/master/showgroup.jsp
--- hbase-0.90.2/hbase-webapps/master/showgroup.jsp	1970-01-01 08:00:00.000000000 +0800
+++ hbase-0.90.2-local/hbase-webapps/master/showgroup.jsp	2011-06-24 17:03:28.000000000 +0800
@@ -0,0 +1,217 @@
+<%@ page language="java" import="java.util.*" import="java.io.*"
+	import="org.apache.hadoop.hbase.master.HMaster"
+	import="org.apache.hadoop.hbase.HTableDescriptor"
+	import="org.apache.hadoop.hbase.HRegionInfo"
+	import="org.apache.hadoop.hbase.HServerAddress"
+	import="org.apache.hadoop.hbase.HServerInfo"
+	import="org.apache.hadoop.hbase.group.ServerWithGroup"
+	import="org.apache.hadoop.hbase.group.MoveGroupPlan"
+	contentType="text/html; charset=GB18030" pageEncoding="GB18030"%>
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+<html>
+<head>
+<meta http-equiv="Content-Type" content="text/html; charset=GB18030">
+<title>Show Regionserver With Group</title>
+<link rel="stylesheet" type="text/css" href="/static/hbase.css" />
+<script type="text/javascript">
+	function validate_moveform() {
+		var result = confirm("Do you want to change regionserver's group information??");
+		if (result == true) {
+			return true;
+		} else {
+			return false;
+		}
+	}
+</script>
+</head>
+<body>
+	<a id="logo" href="http://wiki.apache.org/lucene-hadoop/Hbase"><img src="/static/hbase_logo_med.gif" alt="HBase Logo" title="HBase Logo" /></a>
+	<h1 id="page_title">Show Regionserver Group Information</h1>
+	<p id="links_menu"><a href="/master.jsp">Master</a>,<a href="/logs/">Local logs</a>, <a href="/stacks">Thread Dump</a>, <a href="/logLevel">Log Level</a>,<a href="showgroup.jsp">Group Information</a></p>
+	<hr id="head_rule" />
+	<%
+		final String DEFAULT_GROUP = "0";
+		final String groupinfofilename = "groupinformation.conf";
+		HMaster master = (HMaster) getServletContext().getAttribute(
+				HMaster.MASTER);
+		Collection<HServerInfo> servercollect = master.getClusterStatus().getServerInfo();
+		Map<String, List<String>> groupmap = new HashMap<String, List<String>>();
+		Map<String, Boolean> grouppropertymap = new HashMap<String, Boolean>();
+
+		if (ServerWithGroup.isIserror()) {
+			out.println("<script type=\"text/javascript\">");
+			out.println("alert(\"Failure  warning , "
+					+ ServerWithGroup.getErrormsg() + "!!!\")");
+			out.println("window.location.href='showgroup.jsp'");
+			out.println("</script>");
+			ServerWithGroup.setIserror(false);
+			return;
+		}
+		boolean isprocess = ServerWithGroup.isIsprocess();
+		if (isprocess) {
+			out.println("<TABLE BORDER=1 ALIGN=\"center\" WIDTH=\"60%\">");
+			out.println("<TR><TD>System is busy , you can't do any other operations.</TD></TR>");
+			if (ServerWithGroup.isIsmoveregion()) {
+				Set<MoveGroupPlan> movegroupPlanset = ServerWithGroup
+						.getMovegroupPlanset();
+				String currentserver = ServerWithGroup.getCurrentserver();
+				boolean doMoveconf = ServerWithGroup.isDoMoveconf();
+				out.println("<TR><TD>Change Regionserver Plan</TD></TR>");
+
+				for (MoveGroupPlan plan : movegroupPlanset) {
+					String servername = plan.getServername();
+					String originalgp = plan.getOriginalgroup();
+					String targetgp = plan.getTargetgroup();
+					ServerWithGroup.setCurrentserver(servername);
+					out.println("<TR><TD>Move " + servername + " form "
+							+ originalgp + " to " + targetgp+"</TD>");
+					
+					int remainsize = 0;
+					if(!plan.getStatus()){
+						List<HRegionInfo>  regionlist = ServerWithGroup.listRegionOnRegionServer(master,
+								servername);
+						remainsize = regionlist.size();
+					}
+					out.println("<TD>Remaining Region num :"
+							+ remainsize+"</TD></TR>");
+					if (servername.equals(currentserver) && doMoveconf) {
+						out.println("<TR><TD>Update configuration</TD></TR>");
+					}
+				}
+			}else if (ServerWithGroup.isIsbalance()) {
+				out.println("<TR><TD>Waiting ,system is balance group or table</TD></TR>");
+			} else if (ServerWithGroup.isIschangetable()) {
+				out.println("<TR><TD>Waiting ,system is change table group or table priority</TD></TR>");
+			}
+			out.println("<TR><TD><form name='flushform' action='#' method=post>");
+			out.println("<input type=submit name=submit value=Refresh style=\"width:60%;height:30px\" >");
+			out.println("</form></TD></TR></TABLE>");
+		}
+		String line = "";
+		try {
+			line = ServerWithGroup.readGroupInfo(master, groupinfofilename);
+		} catch (IOException ex) {
+		}
+		groupmap = ServerWithGroup.initGroupMap(master, line);
+		grouppropertymap = ServerWithGroup.initGroupPropertyMap(master,
+				line);
+		if (!grouppropertymap.keySet().contains(DEFAULT_GROUP)) {
+			grouppropertymap.put(DEFAULT_GROUP, false);
+		}
+		if (groupmap.size() <= 0) {
+			out.println("No group Info ,error.......");
+			out.println("alert(\"No group Info ,error.......!!!\")");
+			return;
+		}
+		//show groups
+		//show group list
+		out.println("<form name=groupform action=\"processgroup.jsp\" method=post>");
+		out.println("<TABLE BORDER=1 ALIGN=\"center\" WIDTH=\"60%\">");
+		out.println("<CAPTION><h2>List Group</h2></CAPTION>");
+		out.println("<TR>");
+		out.println("<TD>Group name</TD>");
+		out.println("<TD>Special Configuration</TD>");
+		out.println("<TD>Server num</TD>");
+		out.println("<TD>Region num</TD>");
+		out.println("<TD>Action</TD>");
+		out.println("</TR>");
+		out.println("<TR>");
+		Map<String, Integer> servermap = new HashMap<String, Integer>();
+		for (String gp : groupmap.keySet()) {
+			int servernum = groupmap.get(gp).size();
+			if (!servermap.keySet().contains(gp)) {
+				servermap.put(gp, servernum);
+			} else {
+				Integer orinum = servermap.get(gp);
+				servermap.put(gp, servernum + orinum);
+			}
+		}
+		//out.println("Group size :"+groupmap.keySet().size());
+		for (String gp : groupmap.keySet()) {
+			boolean isspecial = grouppropertymap.get(gp);
+			out.println("<TR>");
+			out.println("<TD><a href=\"groupinfo.jsp?groupname=" + gp
+					+ "\">group:   " + gp + "</a></TD>");
+			out.println("<TD>"+isspecial+"</TD>");
+			int servernum = servermap.get(gp);
+			out.println("<TD ><font color=blue>(" + servernum
+					+ ")</font></TD> ");
+			int regionsize = ServerWithGroup.getRegionNumOnGroup(master,
+					gp, groupmap);
+			out.println("<TD ><font color=black>(" + regionsize
+					+ ")</font></TD> ");
+			if (!gp.equals(DEFAULT_GROUP)) {
+				out.println("<TD><input type=submit name=" + gp
+						+ ".del value=Delete ></TD>");
+			}else{
+				out.println("<TD>default group</TD>");
+			}
+			out.println("</TR>");
+		}
+		out.println("<TR>");
+		out.println("<TD>Add Group:</TD>");
+		out.println("<TD><input type=text name=addnewgroup>(must be int )</TD>");
+		out.println("<TD>Special ?<input type=checkbox name=setgroupproperty ></TD>");
+		out.println("<TD></TD>");
+		out.println("<TD><input type=submit name=groupchange value=AddNew></TD>");
+		out.println("</TR>");
+		out.println("</form>");
+		out.println("<br><br>");
+		//show regionserver groups
+		out.println("<form name=serverform action=\"processgroup.jsp\" method=post onSubmit=\"return validate_moveform()\">");
+
+		out.println("<TABLE BORDER=1 ALIGN=\"center\" WIDTH=\"60%\">");
+		out.println("<CAPTION><h2>RegionServer Group</h2></CAPTION>");
+		out.println("<TR>");
+		out.println("<TD>Region Server name</TD>");
+		out.println("<TD>Request num</TD>");
+		out.println("<TD>Region num</TD>");
+		out.println("<TD>Original Group</TD>");
+		out.println("<TD>Update to New Group</TD>");
+		out.println("</TR>");
+		for (Map.Entry<String, List<String>> entry : groupmap.entrySet()) {
+			String group = entry.getKey();
+			List<String> gplist = entry.getValue();
+			if (gplist.size() <= 0)
+				continue;
+			String[] gparray = gplist.toArray(new String[gplist.size()]);
+			Arrays.sort(gparray, new Comparator<String>() {
+				public int compare(String left, String right) {
+					return left.compareTo(right);
+				}
+			});
+			for (String server : gplist) {
+				out.println("<TR>");
+				HServerInfo  regionserver = null;
+				for (HServerInfo info:servercollect){
+					String name= info.getHostname()+","+info.getServerAddress().getPort();
+					if (name.equals(server)){
+						regionserver = info;
+					}
+				}
+				out.println("<TD><a href=\"http://"+regionserver.getHostname()+":"+regionserver.getInfoPort()+"/regionserver.jsp\">"+server+"</a></TD>");
+				out.println("<TD>" + regionserver.getLoad().getNumberOfRequests() + "</TD>");
+				out.println("<TD>" + regionserver.getLoad().getNumberOfRegions()+ "</TD>");
+				out.println("<TD>" + group + "</TD>");
+				out.println("<TD><select name=" + server
+						+ ".select size=1 style=\"width:80%\">");
+				out.println("<option value=null> </option>");
+				for (String gp : groupmap.keySet()) {
+					if (!gp.equals(group)) {
+						out.println("<option value=" + gp + " >" + gp
+								+ "</option>");
+					}
+				}
+				out.println("</select></TD>");
+				out.println("</TR>");
+			}
+		}
+		out.println("<TR>");
+		out.println("<TD></TD><TD></TD><TD></TD><TD></TD>");
+		out.println("<TD><input type=submit name=regionserverupdate value=UpdateRegionserverGroup style=\"width:80%;height:30px\"></TD>");
+		out.println("</TR>");
+		out.println("</TABLE>");
+		out.println("</form>");
+	%>
+</body>
+</html>
\ No newline at end of file
