This the implementation of HBASE-4120. 
The HBase allocation tool is designed to help users manage cluster resource among different application and tables.
When we manage a large scale of HBase cluster with many applications running on it, there will be lots of problems. In Taobao[1] there is a cluster for many departments to test their applications performance, these applications are based on HBase. With one cluster which have 12 servers, there will be only one application running exclusively on this server, and many other applications must wait until the previous test finished.
After we add allocation manage function to the cluster, applications can share the cluster and run concurrently. Also if the Test Engineer wants to make sure there is no interference, he/she can move out other tables from this group.
In groups we use table priority to allocate resource, when system is busy; we can make sure high-priority tables are not affected lower-priority tables
There are some instruction documents in doc fold.

 [1] Taobao (simplified Chinese: 淘宝网; traditional Chinese: 淘寶網; pinyin: Táobǎowǎng) is a Chinese language web site for online shopping, similar to eBay, Rakuten and Amazon,[2] operated in the People's Republic of China by Alibaba Group.In 2009 Taobao saw advertising revenues of $220 Million.

There is a test case  for table priority located in org.apache.hadoop.hbase.allocation.test.TestForSchedule 
For installation and use cases, please refer to "HBase_Isolation_Allocation_User_Guide.pdf".

Support Hbase Version: hbase-0.90.2 hbase-0.90.3
se-0.90.3 
	Changes:
			group name can be set to String.
			tablepriority alone
	Changes: 
			Rename ScheduleHBaseServer to PriorityHBaseServer
			Use "hbase.tablepriority.enable" to choose whether enable table priority.
			Different actions like "get","scan","put" and "delete" can have priorities
			In table descriptor you can set table priority and action priority like this:
			/*
			des.setValue(Bytes.toBytes(PriorityHBaseServer.PRI_KEY), Bytes.toBytes("3"));
			des.setValue(Bytes.toBytes(PriorityHBaseServer.PRI_KEY_ACTION_PLUS),
       		new ActionPriPlus(6, 0, 0, 0).toBytes()); //scan 6 , put 0, get 0 ,delete 0
			*/
																										




